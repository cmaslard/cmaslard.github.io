---
title: "Garden analysis V2"
subtitle: "The aim here is to analyze my garden (yields and predicted benefits), and secondly to learn how to use SQL databases"
format:
  html:
    page-layout: full
    code-fold: true
editor: visual
author: Corentin Maslard
date: 2025-08-30
#image: "media/deep_learning_segmentation/overlay_modif.png"
categories: [Garden, Analyse, Perso, sql]
editor_options: 
  chunk_output_type: console
---

The aim of this project was simply to record the weights of each fruit and vegetable harvested over the years, in order to predict the possible gains from creating your own garden and linking that with a new sql dataset and website.

The website for the database [is available here.](https://cmaslard.xyz/garden-harvest/)

::: panel-tabset

## Analyse

```{r, echo=F, warning=F, message=FALSE}
library(readxl)
library(dplyr)
library(ggplot2)
library(patchwork)
library(treemap)
library(DBI)
library(RPostgres)
library(dplyr)
```

### Data importation

```{r, dfImport}
# df_harvest_price <- read_excel(here::here("perso_projects/media/data_analyse_garden/recolte_total.xlsx")) %>% 
#   rename("date"=Date_r√©colte) %>% 
#   rename("qty"=`Quantit√© r√©colt√©`) %>% 
#   rename("unite"=Expr1002) %>% 
#   rename("price"=`Prix en magasin BIO`) %>% 
#   rename("name"=`Nom (s) commun (s)`) %>% 
#   rename("type"=`Type (Rotation)`) %>% 
#   rename("total"=Expr1) %>% 
#   dplyr::select(-Unit√©s)

library(httr2)
library(jsonlite)
library(dplyr)

# 1) mets ta cl√© anon en variable d‚Äôenvironnement (une fois par session R)
Sys.setenv(SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh5Z2N6cHdnb3dtbWFyZmt3ZGJjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY0OTUwNDYsImV4cCI6MjA3MjA3MTA0Nn0.euY43Bd9gJW4y2qvxjwAZqrP6RPQXmGwcpD1H1Qx_pg")

# 2) appel RPC dans le sch√©ma 'garden'
SUPABASE_URL <- "https://xygczpwgowmmarfkwdbc.supabase.co"
ANON <- Sys.getenv("SUPABASE_ANON_KEY")
stopifnot(nchar(ANON) > 0)

req <- request(paste0(SUPABASE_URL, "/rest/v1/rpc/harvests_public_all")) |>
  req_method("POST") |>
  req_headers(
    apikey = ANON,
    Authorization = paste("Bearer", ANON),
    `Content-Type` = "application/json",
    Accept = "application/json",
    # üëá indispensable quand la fonction est dans un autre sch√©ma que 'public'
    `Content-Profile` = "garden",
    `Accept-Profile`  = "garden"
  ) |>
  req_body_json(list())  # pas de param√®tres

# (optionnel) voir la requ√™te construite
# req_dry_run(req)

resp <- req_perform(req)
stopifnot(resp_status(resp) < 300)
df <- resp_body_json(resp, simplifyVector = TRUE) |> tibble::as_tibble()
glimpse(df)

plot <- df %>% group_by(product_name) %>% summarise(total = sum(quantity, na.rm=TRUE)) %>%
  ggplot(aes(x=reorder(product_name, total), y=total)) + geom_col() + coord_flip() +
  labs(x=NULL, y='Total', title=sprintf('Quantit√©s par produit (jours)'))

#ggsave('chart.png', plot, width=8, height=5, dpi=150)
#dbDisconnect(con)
plot
```

## Input

<iframe src="https://cmaslard.xyz/garden-harvest/" width="100%" height="1200" style="border:0; border-radius:12px;"></iframe>

:::