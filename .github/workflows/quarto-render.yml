name: Render and Deploy Quarto

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 6 * * *'  # Tous les jours à 6h (UTC)

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: "release"

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4'

      # Installer les dépendances système génériques
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

      # Installer les dépendances pour igraph (exemple déjà présent)
      - name: Install additional system dependencies for igraph
        run: sudo apt-get update && sudo apt-get install -y libglpk40
      
      # Installer la dépendance système pour units (libudunits2)
      - name: Install additional system dependencies for units
        run: sudo apt-get update && sudo apt-get install -y libudunits2-dev

      # Installer les dépendances pour sf (PROJ, GDAL, GEOS) via le PPA ubuntugis
      - name: Install additional system dependencies for sf
        run: |
          sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install -y libproj-dev proj-data proj-bin libgdal-dev libgeos-dev libgdal34

      # (Optionnel) Cacher le répertoire des packages installés par renv pour accélérer les builds futurs  
      # - name: Cache renv library
      #   uses: actions/cache@v3
      #   with:
      #     path: renv/library/R-4.4/x86_64-pc-linux-gnu
      #     key: ${{ runner.os }}-renv-${{ hashFiles('renv.lock') }}

      # Restaurer les dépendances avec renv
      - name: Restore R dependencies with renv
        run: |
          install.packages('renv', repos = 'https://cloud.r-project.org')
          renv::restore(confirm = FALSE)
        shell: Rscript {0}

      # (Optionnel) Lister les packages installés pour vérification
      - name: List installed packages
        run: Rscript -e "print(installed.packages()[, c('Package','Version')])"

      - name: Render Quarto site
        run: quarto render

      - name: Stage changes and pull latest changes
        run: |
          # Configure Git identity
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          
          # Stage all changes
          git add -A
          
          # Commit changes if there are any; if not, echo a message to avoid error
          git commit -m "Automated commit before pull" || echo "No changes to commit"
          
          # Reset the working directory to ensure no unstaged changes remain
          git reset --hard HEAD
          
          # Now pull with rebase
          git pull --rebase

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Automated Quarto render and push" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}